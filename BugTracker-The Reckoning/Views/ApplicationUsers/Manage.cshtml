@model BugTracker_The_Reckoning.Models.AssignPageModel
@{
    ViewBag.Title = "Manage Users";
}
<h2>Manage Users</h2>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.TicketOwner)
    <div class="form-horizontal">
        <h4>@Model.DisplayName</h4>
        <hr />
        <div class="row">
            <div class="col-xs-6">
                <h2>Assignment</h2>
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @if (Model.UserNotTickets != null)
                {
                    <div class="form-group">
                        @Html.LabelFor(model => model.UserNotTickets, "Tickets", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.ListBoxFor(model => model.newTickets, Model.UserNotTickets, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.newTickets, "", new { @class = "text-danger" })
                        </div>
                    </div>
                }
                @if (Model.UserNotProjects.Count() != 0)
                {
                    <div class="form-group">
                        @Html.LabelFor(model => model.UserNotProjects, "Projects", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.ListBoxFor(model => model.newProjects, Model.UserNotProjects, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.newProjects, "", new { @class = "text-danger" })
                        </div>
                    </div>
                }
                @if (Model.UserNotRoles != null)
                {
                    <div class="form-group">
                        @Html.LabelFor(model => model.UserNotRoles, "Roles", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.ListBoxFor(model => model.newRoles, Model.UserNotRoles, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.newRoles, "", new { @class = "text-danger" })
                        </div>
                    </div>
                }
            </div>


            <div class="col-xs-6">
                <h2>Unassignment</h2>
                @if (Model.UserTickets != null)
                {
                    <div class="form-group">
                        @Html.LabelFor(model => model.UserTickets, "Tickets", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.ListBoxFor(model => model.remTickets, Model.UserTickets, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.remTickets, "", new { @class = "text-danger" })
                        </div>
                    </div>
                }

                @if (Model.UserProjects != null)
                {
                    <div class="form-group">
                        @Html.LabelFor(model => model.UserProjects, "Projects", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.ListBoxFor(model => model.remProjects, Model.UserProjects, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.remProjects, "", new { @class = "text-danger" })
                        </div>
                    </div>
                }
                @if (Model.UserRoles != null)
                {
                    <div class="form-group">
                        @Html.LabelFor(model => model.UserRoles, "Roles", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.ListBoxFor(model => model.remRoles, Model.UserRoles, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.remRoles, "", new { @class = "text-danger" })
                        </div>
                    </div>
                }
            </div>

        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default btn-primary btn-large" />
            </div>
        </div>
    </div>
}